{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Kushwanth-reddy/ait-record/blob/main/Task%201A\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Define the graph as an adjacency list\n",
        "graph = {\n",
        "    '5': ['3', '7'],\n",
        "    '3': ['2', '4'],\n",
        "    '7': ['8'],\n",
        "    '2': [],\n",
        "    '4': ['8'],\n",
        "    '8': []\n",
        "}\n",
        "\n",
        "# Initialize lists for visited nodes and queue\n",
        "visited = []\n",
        "queue = []\n",
        "\n",
        "# Function to perform BFS\n",
        "def bfs(visited, graph, start_node):\n",
        "    visited.append(start_node)\n",
        "    queue.append(start_node)\n",
        "\n",
        "    while queue:\n",
        "        current_node = queue.pop(0)\n",
        "        print(current_node, end=\" \")\n",
        "\n",
        "        for neighbour in graph[current_node]:\n",
        "            if neighbour not in visited:\n",
        "                visited.append(neighbour)\n",
        "                queue.append(neighbour)\n",
        "\n",
        "# Driver code\n",
        "print(\"Following is the Breadth-First Search:\")\n",
        "bfs(visited, graph, '5')\n"
      ],
      "metadata": {
        "id": "cPTp6mg7GNue"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "toc_visible": true,
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}